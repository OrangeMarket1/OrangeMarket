<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orange.service.impl.ProductMapper">
	
	<!-- insert -->
	
	<!-- 제품 등록 -->
	<insert id="insertProduct" parameterType="productVO">
	
		INSERT INTO product
			(pro_code,
			seller,
			pro_category_code,
			title,
			keyword,
			addr,
			refund,
			nego,
			price,
			content,
			rdate,
			udate,
			imgs)
		
     VALUES (PRODUCT_SEQ.NEXTVAL,
			#{seller},
			#{proCategoryCode},
			#{title},
			#{keyword},
			#{addr},
			#{refund},
			#{nego},
			#{price},
			#{content},
			sysdate,
			sysdate,
			#{imgs})
	
	</insert>
	
	<insert id="insertLikeProduct" parameterType="productVO">
		INSERT INTO like_product (
				unq,
				liker,
				pro_code,
				seller,
				pro_category_code,
				rdate)
		
		VALUES (LIKE_PRODUCT_SEQ.NEXTVAL,
				${userId},
				${proCode},
				${seller},
				${proCategoryCode},
				sysdate)
	</insert>
	
	<!-- select -->
	
	<!-- 제품 리스트 표시 -->
	<select id="selectProductList" resultType="egovMap">
		SELECT
			pro_code,
			title,
			price,
			addr,
			imgs,
			(select 
                CASE WHEN USER_LEVEL >= 70 THEN '신뢰회원' 
                WHEN USER_LEVEL >= 40 THEN '일반회원' 
                ELSE '주의회원' END
             FROM
                member
            WHERE
                user_id = p.seller) as user_level
		FROM 
			product p
			
		ORDER BY
			rdate DESC
			
	</select>
	
	<!-- 카테고리별 제품 리스트 표시 -->
	<select id="selectProductCategoryList" resultType="egovMap">
		SELECT
			pro_code,
			title,
			price,
			addr,
			imgs,
			(select 
                CASE WHEN USER_LEVEL >= 70 THEN '신뢰회원' 
                WHEN USER_LEVEL >= 40 THEN '일반회원' 
                ELSE '주의회원' END
             FROM
                member
            WHERE
                user_id = p.seller) as user_level
		FROM 
			product p
			
		WHERE
			pro_category_code = ${proCategoryCode}
			
		ORDER BY
			rdate DESC
			
	</select>
	
	<!-- 카테고리명 리스트 출력 -->
	<select id="selectCategoryList" resultType="egovMap">
		SELECT 
			pro_category_code, 
			category, 
			cate_status
		FROM 
			pro_category
	</select>
	
	<!-- 카테고리명 표시 -->
	<select id="selectProCategory" resultType="string">
		SELECT
		    category
		FROM
		    pro_category
		WHERE
		    pro_category_code = ${proCategoryCode}
			
	</select>
	
	<!-- 채팅방 개수 세기 -->
	<select id="selectChatCount" resultType="int">
		SELECT 
			count(*) as chat_cnt
		FROM 
			chat 
		WHERE 
			pro_code = ${proCode}
	</select>	
	
	<!-- 제품 상세보기 -->
	<select id="selectProductDetail" resultType="productVO">
		SELECT
			pro_code,
			seller,
			pro_category_code,
			title,
			keyword,
			addr,
			price,
			content,
			rdate,
			udate,
			status,
			hits,
			nvl(buyer, '0') as buyer,
			refund,
			nego,
			( select nik_name from member where user_id = p.seller) seller_nik,
			nvl(buyer_nik, '0') as buyer_nik,
			imgs,
			(select 
                CASE WHEN USER_LEVEL >= 70 THEN '신뢰회원' 
                WHEN USER_LEVEL >= 40 THEN '일반회원' 
                ELSE '주의회원' END
             FROM
                member
            WHERE
                user_id = p.seller) as user_level
			
		FROM 
			product p
			
		WHERE
			pro_code = ${proCode}

	</select>
	
	<!-- 수정 위한 제품 데이터 보기 -->
	<select id="selectProductModify" resultType="productVO">
		SELECT
			pro_code,
			seller,
			pro_category_code,
			title,
			keyword,
			addr,
			price,
			content,
			rdate,
			udate,
			seller_nik,
			imgs
			
		FROM
			product
			
		WHERE
			pro_code = ${proCode}
	</select>
	
	<!-- 글 작서 시 자동완성 될 주소 받아오기 -->
	<select id="selectProductAddr" resultType="productVO">
		SELECT
			user_id,
			addr
			
		FROM
			member
		
		WHERE
			user_id = ${seller}
	</select>
	
	<select id="selectLikeCount" resultType="int">
		SELECT 
		    count(*)
		FROM 
		    like_product
		WHERE
		    liker = ${userId}
		    and
		    pro_code = ${proCode}
	</select>
	
	<!-- select end -->
	
	<!-- update start -->
		
	<update id="updateProductHits">
		UPDATE product
			SET hits = hits + 1
		WHERE pro_code = ${proCode}
	</update>
		
	<!-- update end -->


</mapper>